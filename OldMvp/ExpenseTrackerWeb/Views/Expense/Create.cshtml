@model ExpenseTrackerDomain.Models.Expense

@{
    ViewBag.Title = "New Expense";
}

@Scripts.Render("~/bundles/pikaday")
@Styles.Render("~/Content/pikaday")


@using (Html.BeginForm("Create", "Expense"))
{
    @Html.AntiForgeryToken()

    <div class="form-group">

        @Html.LabelFor(Model => Model.Date, htmlAttributes: new { @class = "control-label" })
        <div class="col-md-12">        
            @Html.TextBox("Date", (string)ViewBag.dateInit, new { @class = "form-control", @maxlength="10"} )
            <br />
            @Html.ValidationMessageFor(model => model.Date)            
        </div>

        @Html.LabelFor(Model => Model.Value)
        <div class="col-md-12">
            @Html.EditorFor(Model => Model.Value, new { htmlAttributes = new { @class = "form-control" } })
            <br />
            @Html.ValidationMessageFor(model => model.Value)
        </div>

        @Html.LabelFor(Model => Model.Category)
        <div class="col-md-12">
            <div class="dropdown">
                @Html.DropDownList("Category", ViewBag.Categories as List<SelectListItem>, "Select a Category", new { @class = "form-control"})
            </div>
            <br />
            @Html.ValidationMessageFor(model => model.Category)
        </div>

        @Html.LabelFor(Model => Model.PaymentType)
        <div class="col-md-12">
            <div class="dropdown">
                @Html.DropDownList("PaymentType", ViewBag.PaymentTypes as List<SelectListItem>, "Select a Payment Type", new { @class = "form-control" })
            </div>
            <br />
            @Html.ValidationMessageFor(model => model.PaymentType)
        </div>

        @Html.LabelFor(Model => Model.Description)
        <div class="col-md-12">
            @Html.EditorFor(Model => Model.Description, new { htmlAttributes = new { @class = "form-control" } })
            <br />
            @Html.ValidationMessageFor(model => model.Description)
        </div>

    </div>


    <div class="form-group">
        <input type="submit" name="btnNewExpense" value="Add Expense" class="btn btn-primary" />
    </div>
}


<input type="hidden" id="initialDateValue" value="@ViewBag.dateInit" />

@section Scripts {
    <script>

         // Datepicker with pikaday
         var $txtDate = document.getElementById("Date");
         var pickerIni = new Pikaday(
         {
             format: 'DD/MM/YYYY',
             field: $txtDate,
             onSelect: function () {
                 var date = document.createTextNode(this.getMoment().format('DD/MM/YYYY'));
                 document.getElementById('Date').value = date.nodeValue;
             }
         });
         pickerIni.setMoment(moment());
         var initialDateValue = document.getElementById('initialDateValue').value;
         document.getElementById('Date').value = initialDateValue;

    </script>
}

   

